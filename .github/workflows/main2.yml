name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      log_errors:
        description: "Log errors if tests fail"
        required: true
        default: "false"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
 
      - name: Test with pytest
        run: pytest

      - name: Build Docker image
        run: |
          docker build -t your-dockerhub-username/your-image-name:latest .

      - name: Push Docker image to DockerHub
        if: success()
        run: |
          echo ${{ secrets.DOCKER_PASSWORD }} | docker login --username ${{ secrets.DOCKER_USERNAME }} --password-stdin
          docker push your-dockerhub-username/your-image-name:latest

      - name: Create error log artifact
        if: failure() && github.event.inputs.log_errors == 'true'
        run: |
          mkdir -p logs
          echo "Test failed on $(date)" > logs/error_log.txt
          echo "Error details" >> logs/error_log.txt
          echo "${{ steps.test.outputs.stdout }}" >> logs/error_log.txt

      - name: Upload error log as artifact
        if: failure() && github.event.inputs.log_errors == 'true'
        uses: actions/upload-artifact@v3
        with:
          name: error-log
          path: logs/error_log.txt
